---
description: 
globs: 
alwaysApply: true
---
Use Cypress.Commands.add() para criar comandos reutilizáveis em cypress/support/commands.js, evitando repetição de código nos testes.

Benefícios:

- Reduz duplicação de código
- Melhora legibilidade dos testes
- Centraliza lógica comum
- Facilita manutenção


Exemplo: 
```javascript
// Em cypress/support/commands.js
Cypress.Commands.add('login', (username, password) => {
  cy.get('[data-cy=username]')
    .type(username)
  cy.get('[data-cy=password]')
    .type(password)
  cy.get('[data-cy=login-button]')
    .click()
})

// No teste
cy.login('user', 'pass')

```
Documente comandos customizados com JSDoc:


```javascript
/**
 * Realiza login na aplicação
 * @param {string} username - Nome de usuário
 * @param {string} password - Senha do usuário
 * @example cy.login('testuser', 'password123')
 */
Cypress.Commands.add('login', (username, password) => {
  // implementação
})

```